'use strict';class Timer{constructor(){this.clockList=[],this.Run(),console.log("%c\uD83D\uDD52 Ready","color: #196F3D")}Export(){return this.clockList}Import(a=[]){this.clockList=this.clockList.concat(a)}Create(a=!1){let b=new Date,c=10>b.getDate()?"0"+b.getDate():b.getDate(),d=10>b.getMonth()+1?"0"+(b.getMonth()+1):b.getMonth()+1,e={created:b.getFullYear()+"-"+d+"-"+c,seconds:0,getTime:function(){const a=Math.floor(this.seconds/60%60),b=Math.floor(this.seconds/3600),c=this.seconds%60;return{seconds:c,minutes:a,hours:b}},id:Date.now(),active:a,reset:function(){this.seconds=0},context:this,tick:null},f=new Proxy(e,{set:function(a,b,c){"active"===b?a.active!=c&&(a.active=c,a.context.Run()):"tick"===b?a.tick=c:void 0}});return!0==a&&!0==this.IsAllInactive()?(this.clockList.push(e),this.Run()):this.clockList.push(e),f}IsAllInactive(){let a=!1;return a=0<this.clockList.length?this.clockList.map(b=>a+b.active).reduce((c,a)=>c+a):0,!(0<a)}Run(){this.IsAllInactive()?window.clearInterval(this.runControl):this.runControl=window.setInterval(()=>{for(let a=0;a<this.clockList.length;a++)!0===this.clockList[a].active&&(this.clockList[a].seconds++,"function"==typeof this.clockList[a].tick&&this.clockList[a].tick(this.clockList[a].getTime()));this.IsAllInactive()&&window.clearInterval(this.runControl)},1e3)}}